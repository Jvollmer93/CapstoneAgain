@model IEnumerable<Capstone_.Models.Event>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndTime)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    if (item.IsPublic || User.IsInRole("Admin"))
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Location)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndTime)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
    }
}

</table>
<head>
<style>
    #map {
        height: 500px;
        width: 800px;
    }
</style>
</head>
@*<body onload="initialize()">
    <div>
        <input id="address" type="text" value="Sydney, NSW">
        <input type="button" value="Geocode" onclick="codeAddress()">
    </div>
    <div id="map-canvas" style="height:90%;top:30px"></div>
</body>
<script>
    var geocoder;
    var map;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(-34.397, 150.644);
        var mapOptions = {
            zoom: 8,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    }

    function codeAddress() {
        var address = document.getElementById('address').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }
</script>*@
@{List<string> urls = new List<string>();
    List<string> addresses = new List<string>();
    foreach (var item in Model)
    {
        string itemLocation = item.Location;

        var url = ("https://maps.googleapis.com/maps/api/geocode/json?address=" + itemLocation + "&key=AIzaSyBgT7_fsm3Isp67sXF9nHepRxaO4fYyJYQ");
        for (int i = 0; i < urls.Count; i++)
        {
            if (url == urls[i])
            {
                goto OUTERCONTINUE;
            }
        }
        //for(int i = 0; i < addresses.Count; i++)
        //{
        //    if(itemLocation == addresses[i])
        //    {
        //        goto OUTERCONTINUE;
        //    }
        //}
        if (item.IsPublic | User.IsInRole("Admin"))
        { urls.Add(url); }
        //if (item.IsPublic | User.IsInRole("Admin"))
        //{
        //    addresses.Add(itemLocation);
        //}
        OUTERCONTINUE: continue;
    }
}
<body>
    <center><h2>Events</h2></center>
        <center>
            <div id="map"></div>
        </center>
        <script>
            function initMap() {
            var Milwaukee = { lat: 43.0389, lng: -87.9065 };
        var map = new google.maps.Map(document.getElementById('map'), { zoom: 10, center: Milwaukee });
                @foreach (var item in urls) {
                    //get lat
                    //get long
                        <text>
                        var marker = new google.maps.Marker({
            //insert markers lat/long here
                        });</text>
                    }
}
        </script>
        <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDNRMFv2YIYRFyNP9nWbsz-z6JYYd-oxwo&callback=initMap" >
        </script>
</body>

